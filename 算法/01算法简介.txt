算法（Algorithm）：对特定问题的解决方法和步骤
有穷性，确定性，可行性，输入输出
算法可以用自然语言，伪代码（Pseudo Code）或具体编程语言描述
算法是通过数据结构求解问题的步骤，程序是用数据类型描述的算法。
算法的实现：用具体编程语言描述算法
算法的效率：执行算法所需要的时间
算法的（渐进）时间复杂度：算法中基本操作时间的重复次数，它是问题规模n的函数，即T（n）=O(f(n))
算法的空间复杂度：执行算法过程中所需要的最大存储空间，S（n）
健壮性，可读性，正确性

时间复杂度分析：
1.对一个数组的某个元素赋值
a[3] = 5; //时间复杂度为O（1），即常量阶
2.在一个长度为n的数组中查找某个元素
int m = 100;
int i;
for(i=0;i<n;i++)
{
     if(a[i] = m) break;
}
     比较大小的操作作为算法的基本操作，这个基本操作在最坏的情况下重复执行次数为n
     时间复杂度的分析只考虑最坏的情况
     时间复杂度为O（n）,即线性阶
3. 将长度为n的数组的每个元素的值都和某个变量交换
     int m,i;
     for(i=0;i<n;i++)
{    
          int tmp = a[i];
          a[i] = m;
          m = tmp;
}
printf(“a[0]=%d\n”,a[0]);
printf m;
    
时间复杂度为O（3n）,即线性阶
     4.将一个数据元素插入长度为n的数组中
          int m = 10;
          for(i=n-1;i>=0;i--)
          {
               a[i+1] = a[i];
}
a[0] = m;
时间复杂度为O（n）,即线性阶
     5.冒泡排序算法的时间复杂度为O（n^2）,即平方阶
