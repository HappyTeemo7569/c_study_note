#include <stdio.h> //预处理命令
int main(void)               
{
    int num;      //声明变量。int是关键字，num是标识符
    num = 1;      //给变量赋值 

    printf("一个简单的程序。\n"); //调用printf系统函数，\n为转义字符，表示换行。
    printf("Num的值是：%d\n",num);

    return 0; //主函数返回，操作权给操作系统。
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
变量：
	变量名：标识符（由字母、数字、下划线组成，数字不能开头，区分大小写），先定义后使用。最好初始化，即定义的时候赋值。
	关键字：系统使用，比如int。
	变量名保存了地址，数据类型保存了长度和转换关系。

基本数据类型：
	数值数据类型：整型，浮点型
	字符数据类型：字符型，标识符（identifier），关键字（keyword），保留字
		标识符（变量名，函数名，数组名，文件名，类型名）由字母、数字、下划线组成，数字不能开头。区分大小写。
	空类型：void，不确定的数据类型，通常作为类型占位符。

类型长度：
	//sizeof（）运算符可以求一个变量，类型，常量等所占的存储空间。会执行括号中的计算，但是不会有结果。（也可以理解为没有执行）
	
	计算机内存由字节（Byte）组成，一个字节8位(Bit)。变量名表明了内存中的首地址，而类型决定了从首地址往后数多少字节。通常首地址是小的那头。内存从0开始。
	
	有符型，为了区分正负，将第一位作为符号位，0表示正，1表示负。
	无符号类型(unsigned)表数范围的绝对值扩大两倍，只能表示非负整数，比如unsigned short表数范围为0-65535。

	char(unsigned char)         1个字节
	short(unsigned short)       2个字节
	int(unsigned int)           4个字节
	long(unsigned long)         4个字节
	float                       4个字节
	double                      8个字节

	整型：
		短整型(short,2B,-32768 - +32767)
	 	整型(int,4B,-21.47亿 - +21.47亿)
		长整型(long,4B,在32位操作系统上表数范围和int一样)，后面加L或l。
	浮点类型：
		单精度浮点型(float,4B,(-10^38 - -10^-38)和(10^-38 - 10^38))
		双精度浮点型(double,8B,(-10^308 - -10^-308)和(10^-308 - 10^308))
		存储：float最高位为符号位，接下来8位为指数位，最后23位为尾数位。后面加f或F。
		科学计数法表示：E前面必须有数字，指数必须为整数。
		浮点数通常只是实际值的近似值。
	字符数据：
		字符型(char,1B,-128 - +127)，无符号字符型(unsigned char,1B,0 - 255) 
		标识符，关键字，空白符（空格符、制表符、换行符）都属于字符型。 用ASCII编码方案编码后储存，0-255个（有的系统会扩展）。
		标识符（Identifier）：（变量名，函数名，数组名，文件名，类型名）由字母、数字、下划线组成，数字不能开头。区分大小写。
		关键字（Key Word）：具有特俗意义的标识符，不能用于它用。
		保留字（Reserved Word）：系统暂时不使用，未来可能会使用的标识符，比如java中的goto。

原子类型和构造类型：
	原子类型：基本类型、指针类型、空类型。不可再分割。 
	构造类型：数组类型、结构体类型、共用体（结合体）类型。由基本类型构造而成。

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
常量(Constant)：值不能改变的量，不能对常量赋值
	整数常量：十进制，八进制，十六进制。（前缀，0，0x）(后缀，L,U)
	字符常量：普通字符常量和转义字符常量。‘’括起来。
	字符串常量：\0结尾。“”括起来。
	符号常量：宏替换

常用转义字符：也叫转义序列 （escape sequence）
	\n 回车换行 
	\t (transverse) 相当于tab 
	\v (vertical) 竖向跳格 
	\r 左移符 左移光标，输出覆盖 
	\f 换页符 
	\b 退格符 
	\ddd 1-3位八进制所代表的的字符 （ascii码） 
	\xhh 1-2位十六进制所代表的的字符

复数类型：
	复数类型：float_Complex、double_Complex和long double _Complex
	虚数类型是float_Imaginary、double _Imaginary和long double _Imaginary。
	如果包含complex.h头文件，便可用complex代替_Complex，用imaginary代替_Imaginary，还可以用I代替-1的平方根。

char类型小结：
	char a;  //声明一个char类型变量。
	a = 'T'; //赋值
	a = T;   //错误，T是一个变量。
	a = "T"; //错误，T是一个字符串。
	a = 65;  //对于ASCII正确，但是不建议，也许什么时候就错了。

浮点数的上溢和下溢出：
	前者会被赋一个无穷大的数，后者会损失精度或者小于实际值。